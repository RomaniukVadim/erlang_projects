-module(gs1).

-export([start/0]).

start() ->
    io:format("start ~p~n", [self()]),
    spawn(fun loop/0).

loop() ->
    io:format("~p enters loop ~n", [self()]),
    receive
	stop -> io:format("~p stops now ~n", [self()]);
	Msg -> io:format("~p receive ~p~n", [self(), Msg]),
	       loop()
    end.


%% 1-й этап, простейший цикл.
%% Нам нужен поток, который никогда не завершается. Используем для этого бесконечную рекурсию.
%% Поток запускается, входит в функцию loop, проверяет почтовый ящик, обрабатывает сообщения, и опять входит в функцию loop.
%% Тут важно, чтобы это была хвостовая рекурсия. Иначе будет расти память на стеке и в какой-то момент нода упадет из-за нехватки памяти.

%% Можно предусмотреть нормальное завершение потока. Для этого добавим обработку сообщения stop, получив которое, поток не будет вызывать loop. И, таким образом, завершится.
